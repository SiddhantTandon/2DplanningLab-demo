// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: state_message.proto
// Protobuf C++ Version: 5.29.3

#ifndef state_5fmessage_2eproto_2epb_2eh
#define state_5fmessage_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_state_5fmessage_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_state_5fmessage_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_state_5fmessage_2eproto;
namespace state_message {
class AgentMessage;
struct AgentMessageDefaultTypeInternal;
extern AgentMessageDefaultTypeInternal _AgentMessage_default_instance_;
class AgentState;
struct AgentStateDefaultTypeInternal;
extern AgentStateDefaultTypeInternal _AgentState_default_instance_;
class AgentUpdate;
struct AgentUpdateDefaultTypeInternal;
extern AgentUpdateDefaultTypeInternal _AgentUpdate_default_instance_;
class CellState;
struct CellStateDefaultTypeInternal;
extern CellStateDefaultTypeInternal _CellState_default_instance_;
class MapMessage;
struct MapMessageDefaultTypeInternal;
extern MapMessageDefaultTypeInternal _MapMessage_default_instance_;
class MapState;
struct MapStateDefaultTypeInternal;
extern MapStateDefaultTypeInternal _MapState_default_instance_;
class Position;
struct PositionDefaultTypeInternal;
extern PositionDefaultTypeInternal _Position_default_instance_;
}  // namespace state_message
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace state_message {

// ===================================================================


// -------------------------------------------------------------------

class Position final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:state_message.Position) */ {
 public:
  inline Position() : Position(nullptr) {}
  ~Position() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Position* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Position));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Position(
      ::google::protobuf::internal::ConstantInitialized);

  inline Position(const Position& from) : Position(nullptr, from) {}
  inline Position(Position&& from) noexcept
      : Position(nullptr, std::move(from)) {}
  inline Position& operator=(const Position& from) {
    CopyFrom(from);
    return *this;
  }
  inline Position& operator=(Position&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Position& default_instance() {
    return *internal_default_instance();
  }
  static inline const Position* internal_default_instance() {
    return reinterpret_cast<const Position*>(
        &_Position_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Position& a, Position& b) { a.Swap(&b); }
  inline void Swap(Position* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Position* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Position* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Position>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Position& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Position& from) { Position::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Position* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "state_message.Position"; }

 protected:
  explicit Position(::google::protobuf::Arena* arena);
  Position(::google::protobuf::Arena* arena, const Position& from);
  Position(::google::protobuf::Arena* arena, Position&& from) noexcept
      : Position(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRowFieldNumber = 1,
    kColFieldNumber = 2,
  };
  // int32 row = 1;
  void clear_row() ;
  ::int32_t row() const;
  void set_row(::int32_t value);

  private:
  ::int32_t _internal_row() const;
  void _internal_set_row(::int32_t value);

  public:
  // int32 col = 2;
  void clear_col() ;
  ::int32_t col() const;
  void set_col(::int32_t value);

  private:
  ::int32_t _internal_col() const;
  void _internal_set_col(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:state_message.Position)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Position& from_msg);
    ::int32_t row_;
    ::int32_t col_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_state_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class AgentUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:state_message.AgentUpdate) */ {
 public:
  inline AgentUpdate() : AgentUpdate(nullptr) {}
  ~AgentUpdate() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AgentUpdate* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AgentUpdate));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AgentUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline AgentUpdate(const AgentUpdate& from) : AgentUpdate(nullptr, from) {}
  inline AgentUpdate(AgentUpdate&& from) noexcept
      : AgentUpdate(nullptr, std::move(from)) {}
  inline AgentUpdate& operator=(const AgentUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgentUpdate& operator=(AgentUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AgentUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const AgentUpdate* internal_default_instance() {
    return reinterpret_cast<const AgentUpdate*>(
        &_AgentUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(AgentUpdate& a, AgentUpdate& b) { a.Swap(&b); }
  inline void Swap(AgentUpdate* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AgentUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AgentUpdate* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AgentUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AgentUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AgentUpdate& from) { AgentUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AgentUpdate* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "state_message.AgentUpdate"; }

 protected:
  explicit AgentUpdate(::google::protobuf::Arena* arena);
  AgentUpdate(::google::protobuf::Arena* arena, const AgentUpdate& from);
  AgentUpdate(::google::protobuf::Arena* arena, AgentUpdate&& from) noexcept
      : AgentUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAgentIdFieldNumber = 1,
    kTypeFieldNumber = 2,
  };
  // string agent_id = 1;
  void clear_agent_id() ;
  const std::string& agent_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_agent_id(Arg_&& arg, Args_... args);
  std::string* mutable_agent_id();
  PROTOBUF_NODISCARD std::string* release_agent_id();
  void set_allocated_agent_id(std::string* value);

  private:
  const std::string& _internal_agent_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_agent_id(
      const std::string& value);
  std::string* _internal_mutable_agent_id();

  public:
  // string type = 2;
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* value);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // @@protoc_insertion_point(class_scope:state_message.AgentUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      46, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AgentUpdate& from_msg);
    ::google::protobuf::internal::ArenaStringPtr agent_id_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_state_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class CellState final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:state_message.CellState) */ {
 public:
  inline CellState() : CellState(nullptr) {}
  ~CellState() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CellState* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CellState));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CellState(
      ::google::protobuf::internal::ConstantInitialized);

  inline CellState(const CellState& from) : CellState(nullptr, from) {}
  inline CellState(CellState&& from) noexcept
      : CellState(nullptr, std::move(from)) {}
  inline CellState& operator=(const CellState& from) {
    CopyFrom(from);
    return *this;
  }
  inline CellState& operator=(CellState&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CellState& default_instance() {
    return *internal_default_instance();
  }
  static inline const CellState* internal_default_instance() {
    return reinterpret_cast<const CellState*>(
        &_CellState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(CellState& a, CellState& b) { a.Swap(&b); }
  inline void Swap(CellState* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CellState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CellState* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CellState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CellState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CellState& from) { CellState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CellState* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "state_message.CellState"; }

 protected:
  explicit CellState(::google::protobuf::Arena* arena);
  CellState(::google::protobuf::Arena* arena, const CellState& from);
  CellState(::google::protobuf::Arena* arena, CellState&& from) noexcept
      : CellState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 2,
    kPositionFieldNumber = 1,
  };
  // string value = 2;
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // .state_message.Position position = 1;
  bool has_position() const;
  void clear_position() ;
  const ::state_message::Position& position() const;
  PROTOBUF_NODISCARD ::state_message::Position* release_position();
  ::state_message::Position* mutable_position();
  void set_allocated_position(::state_message::Position* value);
  void unsafe_arena_set_allocated_position(::state_message::Position* value);
  ::state_message::Position* unsafe_arena_release_position();

  private:
  const ::state_message::Position& _internal_position() const;
  ::state_message::Position* _internal_mutable_position();

  public:
  // @@protoc_insertion_point(class_scope:state_message.CellState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      37, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CellState& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr value_;
    ::state_message::Position* position_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_state_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class AgentState final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:state_message.AgentState) */ {
 public:
  inline AgentState() : AgentState(nullptr) {}
  ~AgentState() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AgentState* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AgentState));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AgentState(
      ::google::protobuf::internal::ConstantInitialized);

  inline AgentState(const AgentState& from) : AgentState(nullptr, from) {}
  inline AgentState(AgentState&& from) noexcept
      : AgentState(nullptr, std::move(from)) {}
  inline AgentState& operator=(const AgentState& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgentState& operator=(AgentState&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AgentState& default_instance() {
    return *internal_default_instance();
  }
  static inline const AgentState* internal_default_instance() {
    return reinterpret_cast<const AgentState*>(
        &_AgentState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(AgentState& a, AgentState& b) { a.Swap(&b); }
  inline void Swap(AgentState* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AgentState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AgentState* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AgentState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AgentState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AgentState& from) { AgentState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AgentState* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "state_message.AgentState"; }

 protected:
  explicit AgentState(::google::protobuf::Arena* arena);
  AgentState(::google::protobuf::Arena* arena, const AgentState& from);
  AgentState(::google::protobuf::Arena* arena, AgentState&& from) noexcept
      : AgentState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAgentIdFieldNumber = 1,
    kPositionFieldNumber = 2,
  };
  // string agent_id = 1;
  void clear_agent_id() ;
  const std::string& agent_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_agent_id(Arg_&& arg, Args_... args);
  std::string* mutable_agent_id();
  PROTOBUF_NODISCARD std::string* release_agent_id();
  void set_allocated_agent_id(std::string* value);

  private:
  const std::string& _internal_agent_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_agent_id(
      const std::string& value);
  std::string* _internal_mutable_agent_id();

  public:
  // .state_message.Position position = 2;
  bool has_position() const;
  void clear_position() ;
  const ::state_message::Position& position() const;
  PROTOBUF_NODISCARD ::state_message::Position* release_position();
  ::state_message::Position* mutable_position();
  void set_allocated_position(::state_message::Position* value);
  void unsafe_arena_set_allocated_position(::state_message::Position* value);
  ::state_message::Position* unsafe_arena_release_position();

  private:
  const ::state_message::Position& _internal_position() const;
  ::state_message::Position* _internal_mutable_position();

  public:
  // @@protoc_insertion_point(class_scope:state_message.AgentState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      41, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AgentState& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr agent_id_;
    ::state_message::Position* position_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_state_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class MapState final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:state_message.MapState) */ {
 public:
  inline MapState() : MapState(nullptr) {}
  ~MapState() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MapState* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MapState));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MapState(
      ::google::protobuf::internal::ConstantInitialized);

  inline MapState(const MapState& from) : MapState(nullptr, from) {}
  inline MapState(MapState&& from) noexcept
      : MapState(nullptr, std::move(from)) {}
  inline MapState& operator=(const MapState& from) {
    CopyFrom(from);
    return *this;
  }
  inline MapState& operator=(MapState&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MapState& default_instance() {
    return *internal_default_instance();
  }
  enum ParcelCase {
    kCellState = 1,
    kAgentUpdate = 2,
    PARCEL_NOT_SET = 0,
  };
  static inline const MapState* internal_default_instance() {
    return reinterpret_cast<const MapState*>(
        &_MapState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(MapState& a, MapState& b) { a.Swap(&b); }
  inline void Swap(MapState* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MapState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MapState* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MapState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MapState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MapState& from) { MapState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MapState* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "state_message.MapState"; }

 protected:
  explicit MapState(::google::protobuf::Arena* arena);
  MapState(::google::protobuf::Arena* arena, const MapState& from);
  MapState(::google::protobuf::Arena* arena, MapState&& from) noexcept
      : MapState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCellStateFieldNumber = 1,
    kAgentUpdateFieldNumber = 2,
  };
  // .state_message.CellState cell_state = 1;
  bool has_cell_state() const;
  private:
  bool _internal_has_cell_state() const;

  public:
  void clear_cell_state() ;
  const ::state_message::CellState& cell_state() const;
  PROTOBUF_NODISCARD ::state_message::CellState* release_cell_state();
  ::state_message::CellState* mutable_cell_state();
  void set_allocated_cell_state(::state_message::CellState* value);
  void unsafe_arena_set_allocated_cell_state(::state_message::CellState* value);
  ::state_message::CellState* unsafe_arena_release_cell_state();

  private:
  const ::state_message::CellState& _internal_cell_state() const;
  ::state_message::CellState* _internal_mutable_cell_state();

  public:
  // .state_message.AgentUpdate agent_update = 2;
  bool has_agent_update() const;
  private:
  bool _internal_has_agent_update() const;

  public:
  void clear_agent_update() ;
  const ::state_message::AgentUpdate& agent_update() const;
  PROTOBUF_NODISCARD ::state_message::AgentUpdate* release_agent_update();
  ::state_message::AgentUpdate* mutable_agent_update();
  void set_allocated_agent_update(::state_message::AgentUpdate* value);
  void unsafe_arena_set_allocated_agent_update(::state_message::AgentUpdate* value);
  ::state_message::AgentUpdate* unsafe_arena_release_agent_update();

  private:
  const ::state_message::AgentUpdate& _internal_agent_update() const;
  ::state_message::AgentUpdate* _internal_mutable_agent_update();

  public:
  void clear_parcel();
  ParcelCase parcel_case() const;
  // @@protoc_insertion_point(class_scope:state_message.MapState)
 private:
  class _Internal;
  void set_has_cell_state();
  void set_has_agent_update();
  inline bool has_parcel() const;
  inline void clear_has_parcel();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MapState& from_msg);
    union ParcelUnion {
      constexpr ParcelUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::state_message::CellState* cell_state_;
      ::state_message::AgentUpdate* agent_update_;
    } parcel_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_state_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class AgentMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:state_message.AgentMessage) */ {
 public:
  inline AgentMessage() : AgentMessage(nullptr) {}
  ~AgentMessage() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AgentMessage* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AgentMessage));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AgentMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline AgentMessage(const AgentMessage& from) : AgentMessage(nullptr, from) {}
  inline AgentMessage(AgentMessage&& from) noexcept
      : AgentMessage(nullptr, std::move(from)) {}
  inline AgentMessage& operator=(const AgentMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgentMessage& operator=(AgentMessage&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AgentMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const AgentMessage* internal_default_instance() {
    return reinterpret_cast<const AgentMessage*>(
        &_AgentMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(AgentMessage& a, AgentMessage& b) { a.Swap(&b); }
  inline void Swap(AgentMessage* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AgentMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AgentMessage* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AgentMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AgentMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AgentMessage& from) { AgentMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AgentMessage* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "state_message.AgentMessage"; }

 protected:
  explicit AgentMessage(::google::protobuf::Arena* arena);
  AgentMessage(::google::protobuf::Arena* arena, const AgentMessage& from);
  AgentMessage(::google::protobuf::Arena* arena, AgentMessage&& from) noexcept
      : AgentMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAgentsFieldNumber = 2,
    kTimestampFieldNumber = 1,
  };
  // repeated .state_message.AgentState agents = 2;
  int agents_size() const;
  private:
  int _internal_agents_size() const;

  public:
  void clear_agents() ;
  ::state_message::AgentState* mutable_agents(int index);
  ::google::protobuf::RepeatedPtrField<::state_message::AgentState>* mutable_agents();

  private:
  const ::google::protobuf::RepeatedPtrField<::state_message::AgentState>& _internal_agents() const;
  ::google::protobuf::RepeatedPtrField<::state_message::AgentState>* _internal_mutable_agents();
  public:
  const ::state_message::AgentState& agents(int index) const;
  ::state_message::AgentState* add_agents();
  const ::google::protobuf::RepeatedPtrField<::state_message::AgentState>& agents() const;
  // .google.protobuf.Timestamp timestamp = 1;
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_timestamp();
  ::google::protobuf::Timestamp* mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* _internal_mutable_timestamp();

  public:
  // @@protoc_insertion_point(class_scope:state_message.AgentMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AgentMessage& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::state_message::AgentState > agents_;
    ::google::protobuf::Timestamp* timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_state_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class MapMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:state_message.MapMessage) */ {
 public:
  inline MapMessage() : MapMessage(nullptr) {}
  ~MapMessage() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MapMessage* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MapMessage));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MapMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline MapMessage(const MapMessage& from) : MapMessage(nullptr, from) {}
  inline MapMessage(MapMessage&& from) noexcept
      : MapMessage(nullptr, std::move(from)) {}
  inline MapMessage& operator=(const MapMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline MapMessage& operator=(MapMessage&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MapMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const MapMessage* internal_default_instance() {
    return reinterpret_cast<const MapMessage*>(
        &_MapMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(MapMessage& a, MapMessage& b) { a.Swap(&b); }
  inline void Swap(MapMessage* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MapMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MapMessage* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MapMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MapMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MapMessage& from) { MapMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MapMessage* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "state_message.MapMessage"; }

 protected:
  explicit MapMessage(::google::protobuf::Arena* arena);
  MapMessage(::google::protobuf::Arena* arena, const MapMessage& from);
  MapMessage(::google::protobuf::Arena* arena, MapMessage&& from) noexcept
      : MapMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMapStatesFieldNumber = 2,
    kTimestampFieldNumber = 1,
  };
  // repeated .state_message.MapState map_states = 2;
  int map_states_size() const;
  private:
  int _internal_map_states_size() const;

  public:
  void clear_map_states() ;
  ::state_message::MapState* mutable_map_states(int index);
  ::google::protobuf::RepeatedPtrField<::state_message::MapState>* mutable_map_states();

  private:
  const ::google::protobuf::RepeatedPtrField<::state_message::MapState>& _internal_map_states() const;
  ::google::protobuf::RepeatedPtrField<::state_message::MapState>* _internal_mutable_map_states();
  public:
  const ::state_message::MapState& map_states(int index) const;
  ::state_message::MapState* add_map_states();
  const ::google::protobuf::RepeatedPtrField<::state_message::MapState>& map_states() const;
  // .google.protobuf.Timestamp timestamp = 1;
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_timestamp();
  ::google::protobuf::Timestamp* mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* _internal_mutable_timestamp();

  public:
  // @@protoc_insertion_point(class_scope:state_message.MapMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MapMessage& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::state_message::MapState > map_states_;
    ::google::protobuf::Timestamp* timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_state_5fmessage_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Position

// int32 row = 1;
inline void Position::clear_row() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.row_ = 0;
}
inline ::int32_t Position::row() const {
  // @@protoc_insertion_point(field_get:state_message.Position.row)
  return _internal_row();
}
inline void Position::set_row(::int32_t value) {
  _internal_set_row(value);
  // @@protoc_insertion_point(field_set:state_message.Position.row)
}
inline ::int32_t Position::_internal_row() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.row_;
}
inline void Position::_internal_set_row(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.row_ = value;
}

// int32 col = 2;
inline void Position::clear_col() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.col_ = 0;
}
inline ::int32_t Position::col() const {
  // @@protoc_insertion_point(field_get:state_message.Position.col)
  return _internal_col();
}
inline void Position::set_col(::int32_t value) {
  _internal_set_col(value);
  // @@protoc_insertion_point(field_set:state_message.Position.col)
}
inline ::int32_t Position::_internal_col() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.col_;
}
inline void Position::_internal_set_col(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.col_ = value;
}

// -------------------------------------------------------------------

// AgentState

// string agent_id = 1;
inline void AgentState::clear_agent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_id_.ClearToEmpty();
}
inline const std::string& AgentState::agent_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:state_message.AgentState.agent_id)
  return _internal_agent_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AgentState::set_agent_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:state_message.AgentState.agent_id)
}
inline std::string* AgentState::mutable_agent_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_agent_id();
  // @@protoc_insertion_point(field_mutable:state_message.AgentState.agent_id)
  return _s;
}
inline const std::string& AgentState::_internal_agent_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.agent_id_.Get();
}
inline void AgentState::_internal_set_agent_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_id_.Set(value, GetArena());
}
inline std::string* AgentState::_internal_mutable_agent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.agent_id_.Mutable( GetArena());
}
inline std::string* AgentState::release_agent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:state_message.AgentState.agent_id)
  return _impl_.agent_id_.Release();
}
inline void AgentState::set_allocated_agent_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.agent_id_.IsDefault()) {
    _impl_.agent_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:state_message.AgentState.agent_id)
}

// .state_message.Position position = 2;
inline bool AgentState::has_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.position_ != nullptr);
  return value;
}
inline void AgentState::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::state_message::Position& AgentState::_internal_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::state_message::Position* p = _impl_.position_;
  return p != nullptr ? *p : reinterpret_cast<const ::state_message::Position&>(::state_message::_Position_default_instance_);
}
inline const ::state_message::Position& AgentState::position() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:state_message.AgentState.position)
  return _internal_position();
}
inline void AgentState::unsafe_arena_set_allocated_position(::state_message::Position* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }
  _impl_.position_ = reinterpret_cast<::state_message::Position*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:state_message.AgentState.position)
}
inline ::state_message::Position* AgentState::release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::state_message::Position* released = _impl_.position_;
  _impl_.position_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::state_message::Position* AgentState::unsafe_arena_release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:state_message.AgentState.position)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::state_message::Position* temp = _impl_.position_;
  _impl_.position_ = nullptr;
  return temp;
}
inline ::state_message::Position* AgentState::_internal_mutable_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::state_message::Position>(GetArena());
    _impl_.position_ = reinterpret_cast<::state_message::Position*>(p);
  }
  return _impl_.position_;
}
inline ::state_message::Position* AgentState::mutable_position() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::state_message::Position* _msg = _internal_mutable_position();
  // @@protoc_insertion_point(field_mutable:state_message.AgentState.position)
  return _msg;
}
inline void AgentState::set_allocated_position(::state_message::Position* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.position_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.position_ = reinterpret_cast<::state_message::Position*>(value);
  // @@protoc_insertion_point(field_set_allocated:state_message.AgentState.position)
}

// -------------------------------------------------------------------

// AgentMessage

// .google.protobuf.Timestamp timestamp = 1;
inline bool AgentMessage::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& AgentMessage::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& AgentMessage::timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:state_message.AgentMessage.timestamp)
  return _internal_timestamp();
}
inline void AgentMessage::unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:state_message.AgentMessage.timestamp)
}
inline ::google::protobuf::Timestamp* AgentMessage::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* AgentMessage::unsafe_arena_release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:state_message.AgentMessage.timestamp)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* AgentMessage::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* AgentMessage::mutable_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:state_message.AgentMessage.timestamp)
  return _msg;
}
inline void AgentMessage::set_allocated_timestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:state_message.AgentMessage.timestamp)
}

// repeated .state_message.AgentState agents = 2;
inline int AgentMessage::_internal_agents_size() const {
  return _internal_agents().size();
}
inline int AgentMessage::agents_size() const {
  return _internal_agents_size();
}
inline void AgentMessage::clear_agents() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agents_.Clear();
}
inline ::state_message::AgentState* AgentMessage::mutable_agents(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:state_message.AgentMessage.agents)
  return _internal_mutable_agents()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::state_message::AgentState>* AgentMessage::mutable_agents()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:state_message.AgentMessage.agents)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_agents();
}
inline const ::state_message::AgentState& AgentMessage::agents(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:state_message.AgentMessage.agents)
  return _internal_agents().Get(index);
}
inline ::state_message::AgentState* AgentMessage::add_agents() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::state_message::AgentState* _add = _internal_mutable_agents()->Add();
  // @@protoc_insertion_point(field_add:state_message.AgentMessage.agents)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::state_message::AgentState>& AgentMessage::agents() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:state_message.AgentMessage.agents)
  return _internal_agents();
}
inline const ::google::protobuf::RepeatedPtrField<::state_message::AgentState>&
AgentMessage::_internal_agents() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.agents_;
}
inline ::google::protobuf::RepeatedPtrField<::state_message::AgentState>*
AgentMessage::_internal_mutable_agents() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.agents_;
}

// -------------------------------------------------------------------

// CellState

// .state_message.Position position = 1;
inline bool CellState::has_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.position_ != nullptr);
  return value;
}
inline void CellState::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::state_message::Position& CellState::_internal_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::state_message::Position* p = _impl_.position_;
  return p != nullptr ? *p : reinterpret_cast<const ::state_message::Position&>(::state_message::_Position_default_instance_);
}
inline const ::state_message::Position& CellState::position() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:state_message.CellState.position)
  return _internal_position();
}
inline void CellState::unsafe_arena_set_allocated_position(::state_message::Position* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }
  _impl_.position_ = reinterpret_cast<::state_message::Position*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:state_message.CellState.position)
}
inline ::state_message::Position* CellState::release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::state_message::Position* released = _impl_.position_;
  _impl_.position_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::state_message::Position* CellState::unsafe_arena_release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:state_message.CellState.position)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::state_message::Position* temp = _impl_.position_;
  _impl_.position_ = nullptr;
  return temp;
}
inline ::state_message::Position* CellState::_internal_mutable_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::state_message::Position>(GetArena());
    _impl_.position_ = reinterpret_cast<::state_message::Position*>(p);
  }
  return _impl_.position_;
}
inline ::state_message::Position* CellState::mutable_position() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::state_message::Position* _msg = _internal_mutable_position();
  // @@protoc_insertion_point(field_mutable:state_message.CellState.position)
  return _msg;
}
inline void CellState::set_allocated_position(::state_message::Position* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.position_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.position_ = reinterpret_cast<::state_message::Position*>(value);
  // @@protoc_insertion_point(field_set_allocated:state_message.CellState.position)
}

// string value = 2;
inline void CellState::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& CellState::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:state_message.CellState.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CellState::set_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:state_message.CellState.value)
}
inline std::string* CellState::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:state_message.CellState.value)
  return _s;
}
inline const std::string& CellState::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_.Get();
}
inline void CellState::_internal_set_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(value, GetArena());
}
inline std::string* CellState::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* CellState::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:state_message.CellState.value)
  return _impl_.value_.Release();
}
inline void CellState::set_allocated_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.value_.IsDefault()) {
    _impl_.value_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:state_message.CellState.value)
}

// -------------------------------------------------------------------

// AgentUpdate

// string agent_id = 1;
inline void AgentUpdate::clear_agent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_id_.ClearToEmpty();
}
inline const std::string& AgentUpdate::agent_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:state_message.AgentUpdate.agent_id)
  return _internal_agent_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AgentUpdate::set_agent_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:state_message.AgentUpdate.agent_id)
}
inline std::string* AgentUpdate::mutable_agent_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_agent_id();
  // @@protoc_insertion_point(field_mutable:state_message.AgentUpdate.agent_id)
  return _s;
}
inline const std::string& AgentUpdate::_internal_agent_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.agent_id_.Get();
}
inline void AgentUpdate::_internal_set_agent_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_id_.Set(value, GetArena());
}
inline std::string* AgentUpdate::_internal_mutable_agent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.agent_id_.Mutable( GetArena());
}
inline std::string* AgentUpdate::release_agent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:state_message.AgentUpdate.agent_id)
  return _impl_.agent_id_.Release();
}
inline void AgentUpdate::set_allocated_agent_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.agent_id_.IsDefault()) {
    _impl_.agent_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:state_message.AgentUpdate.agent_id)
}

// string type = 2;
inline void AgentUpdate::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.ClearToEmpty();
}
inline const std::string& AgentUpdate::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:state_message.AgentUpdate.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AgentUpdate::set_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:state_message.AgentUpdate.type)
}
inline std::string* AgentUpdate::mutable_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:state_message.AgentUpdate.type)
  return _s;
}
inline const std::string& AgentUpdate::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_.Get();
}
inline void AgentUpdate::_internal_set_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(value, GetArena());
}
inline std::string* AgentUpdate::_internal_mutable_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.type_.Mutable( GetArena());
}
inline std::string* AgentUpdate::release_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:state_message.AgentUpdate.type)
  return _impl_.type_.Release();
}
inline void AgentUpdate::set_allocated_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.type_.IsDefault()) {
    _impl_.type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:state_message.AgentUpdate.type)
}

// -------------------------------------------------------------------

// MapState

// .state_message.CellState cell_state = 1;
inline bool MapState::has_cell_state() const {
  return parcel_case() == kCellState;
}
inline bool MapState::_internal_has_cell_state() const {
  return parcel_case() == kCellState;
}
inline void MapState::set_has_cell_state() {
  _impl_._oneof_case_[0] = kCellState;
}
inline void MapState::clear_cell_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (parcel_case() == kCellState) {
    if (GetArena() == nullptr) {
      delete _impl_.parcel_.cell_state_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.parcel_.cell_state_);
    }
    clear_has_parcel();
  }
}
inline ::state_message::CellState* MapState::release_cell_state() {
  // @@protoc_insertion_point(field_release:state_message.MapState.cell_state)
  if (parcel_case() == kCellState) {
    clear_has_parcel();
    auto* temp = _impl_.parcel_.cell_state_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.parcel_.cell_state_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::state_message::CellState& MapState::_internal_cell_state() const {
  return parcel_case() == kCellState ? *_impl_.parcel_.cell_state_ : reinterpret_cast<::state_message::CellState&>(::state_message::_CellState_default_instance_);
}
inline const ::state_message::CellState& MapState::cell_state() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:state_message.MapState.cell_state)
  return _internal_cell_state();
}
inline ::state_message::CellState* MapState::unsafe_arena_release_cell_state() {
  // @@protoc_insertion_point(field_unsafe_arena_release:state_message.MapState.cell_state)
  if (parcel_case() == kCellState) {
    clear_has_parcel();
    auto* temp = _impl_.parcel_.cell_state_;
    _impl_.parcel_.cell_state_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void MapState::unsafe_arena_set_allocated_cell_state(::state_message::CellState* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_parcel();
  if (value) {
    set_has_cell_state();
    _impl_.parcel_.cell_state_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:state_message.MapState.cell_state)
}
inline ::state_message::CellState* MapState::_internal_mutable_cell_state() {
  if (parcel_case() != kCellState) {
    clear_parcel();
    set_has_cell_state();
    _impl_.parcel_.cell_state_ =
        ::google::protobuf::Message::DefaultConstruct<::state_message::CellState>(GetArena());
  }
  return _impl_.parcel_.cell_state_;
}
inline ::state_message::CellState* MapState::mutable_cell_state() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::state_message::CellState* _msg = _internal_mutable_cell_state();
  // @@protoc_insertion_point(field_mutable:state_message.MapState.cell_state)
  return _msg;
}

// .state_message.AgentUpdate agent_update = 2;
inline bool MapState::has_agent_update() const {
  return parcel_case() == kAgentUpdate;
}
inline bool MapState::_internal_has_agent_update() const {
  return parcel_case() == kAgentUpdate;
}
inline void MapState::set_has_agent_update() {
  _impl_._oneof_case_[0] = kAgentUpdate;
}
inline void MapState::clear_agent_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (parcel_case() == kAgentUpdate) {
    if (GetArena() == nullptr) {
      delete _impl_.parcel_.agent_update_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.parcel_.agent_update_);
    }
    clear_has_parcel();
  }
}
inline ::state_message::AgentUpdate* MapState::release_agent_update() {
  // @@protoc_insertion_point(field_release:state_message.MapState.agent_update)
  if (parcel_case() == kAgentUpdate) {
    clear_has_parcel();
    auto* temp = _impl_.parcel_.agent_update_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.parcel_.agent_update_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::state_message::AgentUpdate& MapState::_internal_agent_update() const {
  return parcel_case() == kAgentUpdate ? *_impl_.parcel_.agent_update_ : reinterpret_cast<::state_message::AgentUpdate&>(::state_message::_AgentUpdate_default_instance_);
}
inline const ::state_message::AgentUpdate& MapState::agent_update() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:state_message.MapState.agent_update)
  return _internal_agent_update();
}
inline ::state_message::AgentUpdate* MapState::unsafe_arena_release_agent_update() {
  // @@protoc_insertion_point(field_unsafe_arena_release:state_message.MapState.agent_update)
  if (parcel_case() == kAgentUpdate) {
    clear_has_parcel();
    auto* temp = _impl_.parcel_.agent_update_;
    _impl_.parcel_.agent_update_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void MapState::unsafe_arena_set_allocated_agent_update(::state_message::AgentUpdate* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_parcel();
  if (value) {
    set_has_agent_update();
    _impl_.parcel_.agent_update_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:state_message.MapState.agent_update)
}
inline ::state_message::AgentUpdate* MapState::_internal_mutable_agent_update() {
  if (parcel_case() != kAgentUpdate) {
    clear_parcel();
    set_has_agent_update();
    _impl_.parcel_.agent_update_ =
        ::google::protobuf::Message::DefaultConstruct<::state_message::AgentUpdate>(GetArena());
  }
  return _impl_.parcel_.agent_update_;
}
inline ::state_message::AgentUpdate* MapState::mutable_agent_update() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::state_message::AgentUpdate* _msg = _internal_mutable_agent_update();
  // @@protoc_insertion_point(field_mutable:state_message.MapState.agent_update)
  return _msg;
}

inline bool MapState::has_parcel() const {
  return parcel_case() != PARCEL_NOT_SET;
}
inline void MapState::clear_has_parcel() {
  _impl_._oneof_case_[0] = PARCEL_NOT_SET;
}
inline MapState::ParcelCase MapState::parcel_case() const {
  return MapState::ParcelCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// MapMessage

// .google.protobuf.Timestamp timestamp = 1;
inline bool MapMessage::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MapMessage::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MapMessage::timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:state_message.MapMessage.timestamp)
  return _internal_timestamp();
}
inline void MapMessage::unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:state_message.MapMessage.timestamp)
}
inline ::google::protobuf::Timestamp* MapMessage::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* MapMessage::unsafe_arena_release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:state_message.MapMessage.timestamp)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* MapMessage::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* MapMessage::mutable_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:state_message.MapMessage.timestamp)
  return _msg;
}
inline void MapMessage::set_allocated_timestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:state_message.MapMessage.timestamp)
}

// repeated .state_message.MapState map_states = 2;
inline int MapMessage::_internal_map_states_size() const {
  return _internal_map_states().size();
}
inline int MapMessage::map_states_size() const {
  return _internal_map_states_size();
}
inline void MapMessage::clear_map_states() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.map_states_.Clear();
}
inline ::state_message::MapState* MapMessage::mutable_map_states(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:state_message.MapMessage.map_states)
  return _internal_mutable_map_states()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::state_message::MapState>* MapMessage::mutable_map_states()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:state_message.MapMessage.map_states)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_map_states();
}
inline const ::state_message::MapState& MapMessage::map_states(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:state_message.MapMessage.map_states)
  return _internal_map_states().Get(index);
}
inline ::state_message::MapState* MapMessage::add_map_states() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::state_message::MapState* _add = _internal_mutable_map_states()->Add();
  // @@protoc_insertion_point(field_add:state_message.MapMessage.map_states)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::state_message::MapState>& MapMessage::map_states() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:state_message.MapMessage.map_states)
  return _internal_map_states();
}
inline const ::google::protobuf::RepeatedPtrField<::state_message::MapState>&
MapMessage::_internal_map_states() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.map_states_;
}
inline ::google::protobuf::RepeatedPtrField<::state_message::MapState>*
MapMessage::_internal_mutable_map_states() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.map_states_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace state_message


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // state_5fmessage_2eproto_2epb_2eh
